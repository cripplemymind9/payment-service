syntax = "proto3";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";
import "google/protobuf/timestamp.proto";

option go_package = "pkg/api/v1;api";
package api.v1.paymentservice;

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    consumes: ["application/json"];
    produces: ["application/json"];
    info: {
      title: "Payment service";
      version: "1.0.0";
      description: "Service for managing payments and reservations";
    };
};

// Общий enum для статусов ответов
enum ResponseStatus {
    UNKNOWN = 0;
    SUCCESS = 1;
    INSUFFICIENT_QUANTITY = 2;
    INTERNAL_ERROR = 3;
}

// Сообщение для запроса резервирования денег
message ReservePaymentRequest {
    int64 user_id = 1 [(validate.rules).int64.gt = 0];
    int64 amount = 2 [(validate.rules).int64.gt = 0];
}

// Сообщение для ответа на резервирование денег
message ReservePaymentResponse {
    ResponseStatus status = 1;
}

// Сообщение для запроса компенсации денег
message CompensatePaymentRequest {
    int64 user_id = 1 [(validate.rules).int64.gt = 0];
    int64 amount = 2 [(validate.rules).int64.gt = 0];
}

// Сообщение для ответа на компенсацию денег
message CompensatePaymentResponse {
    ResponseStatus status = 1;
}

// Сервис управления платежами
service PaymentService {
    // Резервирование денег
    rpc ReservePayment(ReservePaymentRequest) returns (ReservePaymentResponse) {
        option (google.api.http) = {
            post: "/api/v1/payment/reserve"
            body: "*"
        };
    }

    // Компенсация денег (отмена резервирования)
    rpc CompensatePayment(CompensatePaymentRequest) returns (CompensatePaymentResponse) {
        option (google.api.http) = {
            post: "/api/v1/payment/compensate"
            body: "*"
        };
    }
}